#!/usr/bin/env python
"""
This sample programs shows the jobs that failed in a build.
"""

import argparse
from pyannolib import annolib

num_jobs = 0

def run(filename):

    build = annolib.AnnotatedBuild(filename)

    print "Build ID:", build.getBuildID()
    props = build.getProperties()
    print "CWD:", props["CWD"]

    def job_cb(job, junk):
        global num_jobs
        num_jobs += 1

        if job.getType() not in [annolib.JOB_TYPE_RULE]:
            return

        if job.getRetval() == 0:
            return

        if not job.getCommands():
            return

        print
        print "Job", job.getID(), job.getType()
        print "Retval:", job.getRetval()

        make_outputs = job.getOutputs()
        if make_outputs:
            print "Make Log:"
            print "-" * 40
            for output in make_outputs:
                try:
                    print output.getText(),
                except UnicodeEncodeError:
                    print "<unicode>"
            print "-" * 40

        cmds = job.getCommands()
        if cmds:
            print "Commands: (%d)" % len(cmds,)
            for i, cmd in enumerate(cmds):
                print "=" * 40, "(%d)" % (i+1,)
                print cmd.getArgv()

                outputs = cmd.getOutputs()
                if outputs:
                    print "\nOutput:"
                    print "-" * 40
                    for output in outputs:
                        try:
                            print output.getText()
                        except UnicodeEncodeError:
                            print "<unicode>"
                else:
                    print "\nNo Output"

            print "=" * 40

        print
        print "Files Read:"
        for op in job.getOperations():
            if op.getType() != annolib.OP_TYPE_READ:
                continue
            if op.getFileType() == annolib.OP_FILETYPE_SYMLINK:
                continue
            if op.getFileType() == annolib.OP_FILETYPE_DIR:
                continue
            print op.getFile()

        print "Files Created:"
        for op in job.getOperations():
            if op.getType() != annolib.OP_TYPE_CREATE:
                continue
            print op.getFile()


    build.parseJobs(job_cb)


def main():
    parser = argparse.ArgumentParser()

    parser.add_argument("annotation_file")

    options = parser.parse_args()

    run(options.annotation_file)

if __name__ == "__main__":
    main()
